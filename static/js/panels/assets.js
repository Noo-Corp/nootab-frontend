function getUrlParams(){let e=new URLSearchParams(window.location.search);return{isPopped:e.get("popped")}}window.addEventListener("load",function(){renderAccounts("load"),updateNetWorth(),updateLastUpdate(),populateGraphDropdown();let e=JSON.parse(localStorage.getItem("net-worth")||"[]");0!=e.length&&renderGraph();let{isPopped:t}=getUrlParams();"true"!==t&&restrictView();let a=document.getElementById("goal-value");a.addEventListener("keydown",function(e){"Enter"===e.key&&addGoal()})});const restrictView=()=>{let e=document.querySelectorAll(".popped-element");e.forEach(e=>e.style.display="none");let t=document.getElementById("due-btn");document.getElementById("capital-container").style.border="none",document.getElementById("capital-debt-container").style.marginTop="20px",t.style.position="relative",t.style.left="initial",t.style.transform="initial",t.style.fontSize="12px",document.getElementById("graph-container").style.marginTop=0,document.getElementById("graph-container").style.overflow="hidden",document.getElementById("graph-data").style.height="100%",document.getElementById("assets-container").style.marginLeft=0,document.getElementById("assets-container").style.marginRight=0;let a=document.getElementById("goals-list"),l=a.querySelectorAll("li");l.forEach((e,t)=>{0===t?(e.style.display="flex",e.querySelector(".goal-action").style.display="none",e.querySelector(".goal-date").style.display="none",e.querySelector(".goal-eta").style.marginRight=0):e.style.display="none"})},updateLastUpdate=()=>{let e=localStorage.getItem("lastUpdateDate")?new Date(localStorage.getItem("lastUpdateDate")):null,t=new Date,a=e?Math.floor((t-e)/864e5):0,l=7-a,n=document.querySelector("#due-btn");1==l?n.innerHTML="Update in <span id='update-time'>"+l+"</span> Day":n.innerHTML="Update in <span id='update-time'>"+l+"</span> Days",0==l?(n.innerHTML="Update <span id='update-time'>Now</span>",n.classList.add("due")):l<0?(n.textContent="Update Overdue",n.classList.add("overdue")):(n.classList.remove("due"),n.classList.remove("overdue"))},calculateWeeklyRate=e=>{if(e.length<2)return"";let t=e[e.length-1].value,a=e[e.length-2].value;if(0===a)return 0===t?'<span class="weekly-rate popped-element">(0.00%)</span>':'<span class="weekly-rate popped-element">(Infinity%)</span>';let l=(t-a)/Math.abs(a)*100;return l<0?`<span class="weekly-rate negative popped-element">(${l.toFixed(2)}%)</span>`:`<span class="weekly-rate popped-element">(${l.toFixed(2)}%)</span>`},formatCurrency=(e,t=null)=>{let a=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(Math.abs(e)),l="";if(t&&"net-worth"==t){let n=JSON.parse(localStorage.getItem(t)||"[]");l=calculateWeeklyRate(n)}return e<0?`<span class="negative" data-value="${e}">-${a}${l}</span></span>`:`<span data-value="${e}">${a}${l}</span></span>`},formatDays=e=>{if(e<=0)return"Achieved";let t=Math.floor(e/365),a=Math.floor(e%365/30),l=e%30,n=[];return t>0&&n.push(`${t} year${t>1?"s":""}`),a>0&&n.push(`${a} month${a>1?"s":""}`),l>0&&n.push(`${l} day${l>1?"s":""}`),n.join(", ")},updateNetWorth=()=>{let e=calculateTotal("capital"),t=calculateTotal("debt"),a=e-t,l=document.getElementById("net-worth");l.dataset.value=a,l.innerHTML=formatCurrency(a,"net-worth")},calculateTotal=e=>{let t=JSON.parse(localStorage.getItem(e))||{};return Object.values(t).reduce((e,t)=>{let a=t[t.length-1]?.value||0;return e+a},0)},addAccount=e=>{let t=prompt(`Enter a name for the ${e.charAt(0).toUpperCase()+e.slice(1)} account:`);if(!t)return;let a=t.trim();if(!a)return;let l=parseFloat(prompt("Enter the initial value for the account:"));if(isNaN(l)||l<0)return;let n=JSON.parse(localStorage.getItem(e))||{};n[a]||(n[a]=[{date:new Date().toLocaleDateString("en-US"),value:l}],localStorage.setItem(e,JSON.stringify(n)),updateDerivedValues(),renderAccounts(),updateNetWorth(),renderGoals(),populateGraphDropdown(),renderGraphLog())},renderAccounts=e=>{["capital","debt"].forEach(e=>{let t=document.getElementById(`${e}-list`);t.innerHTML="";let a=JSON.parse(localStorage.getItem(e))||{};for(let[l,n]of Object.entries(a)){let r=n[n.length-1]?.value||0,o=document.createElement("li");o.innerHTML=`
                <div>${l}</div>
                <div>${formatCurrency(r)}</div>
                <div><button class="popped-element remove-button" onclick="deleteAccount('${e}', '${l}')">&#10006;</button></div>
            `,t.appendChild(o)}let s=document.getElementById(`${e}-total`),i=JSON.parse(localStorage.getItem(`total-${e}`))||[],d=i.length?i[i.length-1].value:0;s.innerHTML="["+formatCurrency(d)+"]"}),"load"!=e&&updateDerivedValues(),renderGoalsDropdown(),renderGoals()},deleteAccountGoals=e=>{let t=JSON.parse(localStorage.getItem("goals"))||[],a=t.filter(t=>t.account!==e);localStorage.setItem("goals",JSON.stringify(a))},deleteAccount=(e,t)=>{if(confirm(`Are you sure you want to delete the ${e.charAt(0).toUpperCase()+e.slice(1)} account "${t}"?`)){let a=JSON.parse(localStorage.getItem(e))||{};delete a[t],localStorage.setItem(e,JSON.stringify(a)),updateDerivedValues(),renderAccounts(),updateNetWorth(),renderGoals(),populateGraphDropdown(),renderGraphLog()}},updateBalances=()=>{["capital","debt"].forEach(e=>{let t=JSON.parse(localStorage.getItem(e))||{};for(let[a,l]of Object.entries(t)){let n=l[l.length-1]?.value||0,r=new Date(l[l.length-1]?.date),o=r.toLocaleDateString("en-US"),s=r.toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"}),i=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(Math.abs(n)),d=prompt(`━━━━━━━━━━━━━━━━━━━━━━━━━
     ✨ Account Update ✨     
━━━━━━━━━━━━━━━━━━━━━━━━━

📂 Account: ${a}
💰 Last Balance (as of ${s}): ${i}

➡️ Enter the updated balance below,
   or press OK to keep the same value.

━━━━━━━━━━━━━━━━━━━━━━━━━`),c=null===d||""===d.trim()?n:parseFloat(d);if(!isNaN(c)){let p=new Date().toLocaleDateString("en-US");o===p?l[l.length-1]={date:p,value:c}:l.push({date:p,value:c})}}localStorage.setItem(e,JSON.stringify(t))}),updateDerivedValues(),renderAccounts(),updateNetWorth(),renderGraphLog();let e=new Date;localStorage.setItem("lastUpdateDate",e.toISOString()),updateLastUpdate();let{isPopped:t}=getUrlParams();"true"!==t&&restrictView()},updateDerivedValues=()=>{let e=(e,t)=>{let a=JSON.parse(localStorage.getItem(e))||[],l=new Date().toLocaleDateString("en-US");a.length&&a[a.length-1].date===l?a[a.length-1].value=t:a.push({date:l,value:t}),localStorage.setItem(e,JSON.stringify(a))},t=calculateTotal("capital");e("total-capital",t);let a=calculateTotal("debt");e("total-debt",a);let l=t-a;e("net-worth",l)},renderGoalsDropdown=()=>{let e=document.getElementById("goal-account");e.innerHTML="";let t=[{value:"net-worth",label:"Net Worth"},{value:"total-capital",label:"Total Capital"},{value:"total-debt",label:"Total Debt"}];t.forEach(t=>{let a=document.createElement("option");a.value=t.value,a.textContent=t.label,e.appendChild(a)}),["capital","debt"].forEach(t=>{let a=JSON.parse(localStorage.getItem(t))||{};for(let l of Object.keys(a)){let n=document.createElement("option");n.value=`${t}-${l}`,n.textContent=`${l}`,e.appendChild(n)}})},renderGoals=()=>{let e=document.getElementById("goals-list");e.innerHTML="";let t=JSON.parse(localStorage.getItem("goals"))||[],a={...JSON.parse(localStorage.getItem("capital")||"{}"),...JSON.parse(localStorage.getItem("debt")||"{}"),"net-worth":JSON.parse(localStorage.getItem("net-worth")||"[]"),"total-capital":JSON.parse(localStorage.getItem("total-capital")||"[]"),"total-debt":JSON.parse(localStorage.getItem("total-debt")||"[]")},l=e=>{switch(e){case"net-worth":return calculateTotal("capital")-calculateTotal("debt");case"total-capital":return calculateTotal("capital");case"total-debt":return calculateTotal("debt");default:return null}},n=t.map(e=>{let t=["net-worth","total-capital","total-debt"].includes(e.account),n;n=t?a[e.account]||[]:a[e.account.split("-")[1]]||[];let r=t?l(e.account):n?.length?n[n.length-1].value:0;if(n.length<2)return{...e,etaDays:null,etaDate:null,notEnoughData:!0,notAchievable:!1};let o=n[n.length-1].value-n[0].value,s=(new Date(n[n.length-1].date)-new Date(n[0].date))/864e5,i=0!=s?o/s:0,d=e.value-r,c=0!=i?Math.ceil(d/i):-1;if(c<=0)return{...e,etaDays:null,etaDate:null,notEnoughData:!1,notAchievable:!0};let p=new Date(Date.now()+864e5*c).toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"});return{...e,etaDays:c,etaDate:p,notEnoughData:n.length<2,notAchievable:c<=0}}),r=n.sort((e,t)=>null===e.etaDays?1:null===t.etaDays?-1:e.etaDays-t.etaDays);r.forEach(t=>{let a=["net-worth","total-capital","total-debt"].includes(t.account),l=a?t.account.replace(/-/g," "):t.account.split("-")[1],n=t.notEnoughData?"Not enough data":t.notAchievable?"N/A":formatDays(t.etaDays),r=t.notEnoughData||t.notAchievable?"":t.etaDate||"",o=document.createElement("li"),s=""===r?"N/A":r;o.innerHTML=`
            <div class="goal-title">${formatCurrency(t.value)} <span class="goal-account-name">-- ${l}</span></div>
            <div class="goal-eta">${n}</div>
            <div class="goal-date">${s}</div>
            <div class="goal-action"><button class="popped-element remove-button" onclick="deleteGoal('${t.id}')">&#10006;</button></div>
        `,e.appendChild(o)})},addGoal=()=>{let e=document.getElementById("goal-account"),t=e.value,a=document.getElementById("goal-value"),l=parseFloat(a.value);if(!t||isNaN(l))return;let n=JSON.parse(localStorage.getItem("goals"))||[],r=Date.now().toString();n.push({id:r,account:t,value:l}),localStorage.setItem("goals",JSON.stringify(n)),a.value="",renderGoals()},deleteGoal=e=>{let t=JSON.parse(localStorage.getItem("goals"))||[],a=t.filter(t=>t.id!==e);localStorage.setItem("goals",JSON.stringify(a)),renderGoals()},populateGraphDropdown=()=>{let e=document.getElementById("account-selector");e.innerHTML="";let t=[{value:"net-worth",label:"Net Worth"},{value:"total-capital",label:"Total Capital"},{value:"total-debt",label:"Total Debt"}];t.forEach(t=>{let a=document.createElement("option");a.value=t.value,a.textContent=t.label,e.appendChild(a)}),["capital","debt"].forEach(t=>{let a=JSON.parse(localStorage.getItem(t))||{};for(let l of Object.keys(a)){let n=document.createElement("option");n.value=`${t}-${l}`,n.textContent=`${l}`,e.appendChild(n)}})},toggleGraphLogView=()=>{let e=null===document.getElementById("account-graph");(e=!e)?(document.getElementById("graph-data").classList.add("height-limit"),renderLogs()):(document.getElementById("graph-data").classList.remove("height-limit"),renderGraph());let t=document.getElementById("toggle-log-view");e?(t.innerHTML="&#9736;",t.classList.add("log-view-pad")):(t.innerHTML="&#9776;",t.classList.remove("log-view-pad"));let a=document.getElementById("main-container");a.scrollTop=a.scrollHeight},renderGraphLog=(e=!1)=>{let t=null===document.getElementById("account-graph");if(t?(document.getElementById("graph-data").classList.add("height-limit"),renderLogs()):(document.getElementById("graph-data").classList.remove("height-limit"),renderGraph()),e){let a=document.getElementById("main-container");a.scrollTop=a.scrollHeight}},renderGraph=()=>{let e=document.getElementById("graph-data");e.innerHTML='<canvas id="account-graph"></canvas>';let t=document.getElementById("account-selector"),a=t.value,l={...JSON.parse(localStorage.getItem("capital")||"{}"),...JSON.parse(localStorage.getItem("debt")||"{}"),"net-worth":JSON.parse(localStorage.getItem("net-worth")||"[]"),"total-capital":JSON.parse(localStorage.getItem("total-capital")||"[]"),"total-debt":JSON.parse(localStorage.getItem("total-debt")||"[]")},n=["net-worth","total-capital","total-debt"].includes(a),r;if(0===(r=n?l[a]||[]:l[a.split("-")[1]]||[]).length){alert("Not enough data available for this account.");return}let o=r.map(e=>e.date),s=r.map(e=>e.value),i=document.getElementById("account-graph"),d=i.getContext("2d");if(i.dataset.chartInstance){let c=Chart.getChart(i);c&&c.destroy()}let p=(e,t)=>{let a=e.length,l=e.reduce((e,t)=>e+t,0),n=t.reduce((e,t)=>e+t,0),r=e.reduce((e,a,l)=>e+a*t[l],0),o=e.reduce((e,t)=>e+t*t,0),s=(a*r-l*n)/(a*o-l*l),i=(n-s*l)/a;return{slope:s,intercept:i}},u=r.map(e=>new Date(e.date).getTime()),g=r.map(e=>e.value),{slope:m,intercept:h}=p(u,g),y=u.map(e=>({x:e,y:m*e+h})),v=getComputedStyle(document.documentElement),$=v.getPropertyValue("--modetext").trim(),b=v.getPropertyValue("--main").trim(),f=v.getPropertyValue("--hover").trim(),I=v.getPropertyValue("--secondary").trim(),{isPopped:_}=getUrlParams(),w="true"==_,E=new Chart(d,{type:"line",data:{labels:o,datasets:[{label:"",data:s,borderColor:b,backgroundColor:f,borderWidth:2,tension:0},{label:"Linear Fit",data:y,borderColor:I,borderWidth:2,fill:!1,showLine:!0,pointRadius:0,borderDash:[5,5]}]},options:{responsive:!0,plugins:{legend:{display:!1}},scales:{x:{type:"time",time:{unit:"day",tooltipFormat:"ll",displayFormats:{day:"MMM D"}},title:{display:!1},grid:{color:"rgba(111, 111, 111, 0.4)"},ticks:{maxTicksLimit:w?28:5,color:$}},y:{title:{display:!1},beginAtZero:!0,grid:{color:"rgba(111, 111, 111, 0.4)"},ticks:{color:function(e){return e.tick.value<0?"#ff5353":$},font:{size:w?12:10},callback:function(e){return e<0?`-$${Math.abs(e).toFixed(2)}`:`$${e.toFixed(2)}`}}}}}});i.dataset.chartInstance=E.id},generateLogRows=(e,t=!1)=>{let a="";for(let l=e.length-1;l>=0;l--){let n=e[l],r=l>0?e[l-1]:null,o=r?n.value-r.value:0,s=0;r&&(n.value<0&&r.value<0?s=o/Math.abs(r.value)*100:n.value>0&&r.value>0?s=o/r.value*100:n.value<0&&r.value>0?s=o/r.value*100:n.value>0&&r.value<0&&(s=Math.abs(o)/Math.abs(r.value)*100));let i=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(Math.abs(o)),d=l===e.findIndex(t=>t.value===Math.max(...e.map(e=>e.value))),c=l===e.findIndex(t=>t.value===Math.min(...e.map(e=>e.value)));if(t){let p=d;d=c,c=p,o=0==o?`<span>${i}</span>`:o>0?`<span class="negative">${i}</span>`:`<span>-${i}</span>`,s=s>0?`<span class="negative">${s.toFixed(2)}%</span>`:`<span>${s.toFixed(2)}%</span>`}else o=o<0?`<span class="negative">-${i}</span>`:`<span>${i}</span>`,s=s<0?`<span class="negative">${s.toFixed(2)}%</span>`:`<span>${s.toFixed(2)}%</span>`;a+=`
            <tr class="${d?"highest":c?"lowest":""}">
                <td>${n.date}</td>
                <td>${formatCurrency(n.value)}</td>
                <td>${o}</td>
                <td>${s}</td>
            </tr>
        `}return a},renderLogs=()=>{let e=document.getElementById("account-selector"),t=e.value,a={...JSON.parse(localStorage.getItem("capital")||"{}"),...JSON.parse(localStorage.getItem("debt")||"{}"),"net-worth":JSON.parse(localStorage.getItem("net-worth")||"[]"),"total-capital":JSON.parse(localStorage.getItem("total-capital")||"[]"),"total-debt":JSON.parse(localStorage.getItem("total-debt")||"[]")},l=["net-worth","total-capital","total-debt"].includes(t),n;n=l?a[t]||[]:a[t.split("-")[1]]||[];let r=!1;if(("total-debt"==t||"debt"==t.split("-")[0])&&(r=!0),0===n.length){alert("Not enough data available for this account.");return}let o=document.getElementById("graph-data");o.innerHTML=`
        <table id="log-table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Value</th>
                    <th>Absolute &#916;</th>
                    <th>Relative &#916;</th>
                </tr>
            </thead>
            <tbody>
                ${generateLogRows(n,r)}
            </tbody>
        </table>
    `};